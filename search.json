[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Programming from Specifications and Formal Methods",
    "section": "",
    "text": "Preface\nThis is a Quarto book.\nTo learn more about Quarto books visit https://quarto.org/docs/books.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "reading.html",
    "href": "reading.html",
    "title": "1  Reading List",
    "section": "",
    "text": "1.1 Intro",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Reading List</span>"
    ]
  },
  {
    "objectID": "reading.html#intro",
    "href": "reading.html#intro",
    "title": "1  Reading List",
    "section": "",
    "text": "Program Construction and Verification. Backhouse\nSystematic Programming. Wirth\nA Method of Programming. Feijen, Dijkstra\nPredicate Calculus and Program Semantics. Dijkstra, Scholten\nStructured Programming. Dahl, Dijkstra, Hoare\nA Discipline of Programming. Dijkstra\nProgram Derivation - Development of Programs from Specifications. Dromey\nProgramming in the 1990s - An Introduction to Calculation of Programs. Cohen\nProgramming - the Derivation of Algorithms. Kaldewaij\nProgramming from Specifications. Morgan\nAlgorithmic Problem Solving. Backhouse\nProgram Construction - Calculating Implementations from Specifications. Backhouse\nSpecifying Software - A Hands-on Approach. Tennent\nInduction, Recursion, and Programming. Wand\nReasoned Programming. Broda\nEquations, Models, and Programs - a Mathematical Introduction to Computer Science. Myers.\nGuarded Command Language - A Short Description. Power\nProgram Proofs. Rustan, Leino\nEffective Theories in Programming Practice. Misra\nSmall Programming Exercises. Rem",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Reading List</span>"
    ]
  },
  {
    "objectID": "reading.html#section",
    "href": "reading.html#section",
    "title": "1  Reading List",
    "section": "1.2 ",
    "text": "1.2 \n\nMathematical Theory of Program Correctness. de Bakker\nRefinement Calculus - A Systematic Approach. Back, von Wright\nThe B-Book - Assigning Programs to Meanings. Abrial",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Reading List</span>"
    ]
  },
  {
    "objectID": "reading.html#formal-methods-in-se",
    "href": "reading.html#formal-methods-in-se",
    "title": "1  Reading List",
    "section": "1.3 Formal Methods in SE",
    "text": "1.3 Formal Methods in SE\n\nSpecification and Transformation of Programs - A Formal Approach to Software Development. Partsch\nFormal Software Development - From VDM to Java. Charatan, Kans\nFormal Object-Oriented Development. Kevin Lano\nThe B Language and Method - A Guide to Practical Formal Development. K Lano\nSoftware Abstractions. Logic, Language, and Analysis. Daniel Jackson\nModel-Based Software Testing and Analysis with C#. Jacky et al\n\n\n1.3.1 VDM\n\nFormal Specification and Design. Feijs, Jonkers\nValidated Designs for Object-Oriented Systems. Fitzgerald et al\nModelling Systems - Practical Tools and Techniques in Software Development. Fitzgerald, Larsen\nSystematic Software Development Using VDM. Cliff Jones\n\n\n\n1.3.2 Z\n\nUsing Z - Specification, Refinement, and Proof. Woodcock, Davies\nFormal Specification and Documentation using Z: A Case Study Approach. Jonthan Bowen\nThe Way of Z - Practical Programming with Formal Methods. Jonathan Jacky",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Reading List</span>"
    ]
  },
  {
    "objectID": "reading.html#articles",
    "href": "reading.html#articles",
    "title": "1  Reading List",
    "section": "1.4 Articles",
    "text": "1.4 Articles\n\nProving Program Refinements and Transformations (1989). Ward\nLoop Invariants: Analysis, Classification, and Examples. Furia, Meyer, Velder\nWell-founded Induction and the Invariance Theorem for Loops. Morris\nLaws of Data Refinement. Morris\nA Theoretical Basis for Stepwise Refinement and the Programming Calculus. Morris\nProgramming as a Mathematical Exercise. Abrial, Shepherdson, Hillmore, Constable\nA Weaker Precondition for Loops. Boom\nPredicative Programming Part I & II. Hehner\nPrograms are Predicates. Hoare\nInvariant Based Programming: Basic Approach and Teaching Experiences. Ralph Back\nData Refinement of Invariant Based Programs. Preoteasa, Ralph Back\nStructured Calculational Proof. Ralph Back, Jim Grundy, von Wright\nStructured Derivations: A Unified Proof Style for Teaching Mathematics. Ralph Back\nInvariant Diagrams with Data Refinement. Ralph Back\nProgram Derivation by Fixed Point Computation. Jiazhen Cai, Robert Paige\nTen Years of Hoare’s Logic: A Survey - Part I & II. Apt\nThe Axiomatic Semantics of Programs Based on Hoare’s Logic. Bergstra, Tucker\n\n\n1.4.1 Pointer Programs\n\nApplying Light-Weight Theorem Proving to Debugging and Verifying Pointer Programs. Ranise\nVerifying Reachability Invariants of Linked Structures. Nelson\nProving Pointer Programs in Higher-Order Logic. Mehta, Nipkow\nDerivation of Graph and Pointer Algorithms. Moeller\nA Framework for Program Verification in the Context of Linked Structures and Pointer Variables\nCompleteness and Expressiveness of Pinter Program Verification by Separation Logic. Tatsuta, Chin, Al Ameen\nCalculating a Garbage Collector. Berger, Meixner, Moeller\nCalculating with Pointers. Bijlsma\nTowards Pointer Algebra. Moeller",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Reading List</span>"
    ]
  }
]